1.基础 函数应用
 函数本来就是一种比较特殊的对象
 普通函数,封装函数：只是为了封装代码块实现
 代码的复用。
 构造函数：构建新的对象
  function  Test(){
   
  }
  var   test  = function(){
  }
  test.prototype
  Function  :构造器函数
  function  Function(){
  
  }
  function  test(){}
  function sayHello(){}
  console.log(Function.prototype.)
  html
  {}
  ----------------------------------
 1.
    函数创建的方式
     1.
        test()
        function   name(参数列表){
	}
	test()
        test();//test根本没有被声明
	var  test  = function(){
	}
	test();

        (function(a){
	
	})(10);
  2.函数的参数
     js  var  没有方法重载
     add(a,b)
     add(10,20)
     不确定参数个数
     add(){
       agruments:类数组对象 
       length:本次传递多少个实参给方法
       callee:指的就是函数本身
     }
     add(10,20,30)
    
   function   add(){
     //通过length先获取长度  然后使用for
     var  length = arguments.length;
     for(var  i=0;i<length;i++){
        var value =arguments[i];
     }
     //{"0":10,"1":20,"2":3}
     for(var   index  in arguments){
          arguments[index]
     }
     callee:递归
   }

   add(10,20,3);
    结束：
   function  test(a){
       if(a<=1){
          return 1;
       } else{
         return a*arguments.callee(a-1);
       }
   }
3.函数的调用：
   function  test(){
     console.log(this.a);//10
   }
   浏览器
   var  a  =20;
   var  per={
     a:10
   }
   //this   水调用这个方法 this就指向谁
  test()
  test.call(window)
  test.call(per,10,20)
  test.apply(per,[10,20])
----------------------
多功能的函数：
  1.参数
  2.返回值
  ---------------------
  封装一个方法：实现加减乘除操作
  function  add(){
  }
  function jian(){
  }
  function chen(){
  }
  function  chu(){
  }
  
  function   getMethod(opt){
    if(opt=="加"){
      var  add= function(){
        
      }
      return  add;
    }else if(opt=="减"){
      
    }
  }
  getMethod("加")(10,20,30)
------
参数：
   var   fun  =function(){}
   return :  调用某个方法会有一个结果
   返回给方法的调用者
   function test(){
     return 10;
   }
-------------------
  var  fun =function(a,b){
     var  res=a+b;
     return res;
  }

 function daijia(fun){
   var  ss = fun(10,20);
   console.log(ss);//30
   return ss;
 }
 var  rr  =daijia(fun)
 --------------------------------------
 基本:值本身  
 函数：地址
 自己

 基本：
 function test(zhaoliu){
   // zhouliu  =20
   zhouliu=80;
 }
 var  b= 20;
 test(b)
 console.log(b);

 function  test(zhaoliu){
   zhaoliu.name="赵六"
}
var  per{
  name:"张三";
}
//per --->地址  001
test(001)
----------------------------------------
java :
   数组： 数据类型固定  长度固定 不可更改
   集合：
js:
遍历知道数组的长度
for while  do..while 
不知道数组的长度
for ..in
8
---------------------
1.
   要求建立学生五个对象：
   属性： ID  name   source
   1.按照学号从小到大将对象进行排序
   2.按照学生的成绩从大到小进行排序
   3（选做）
      有一个学生名字叫做tom ,y要求名字为tom的学生
      不管考多少分都排在第一位。
      其他学生按照成绩高低排序




 
  

   
 


  

  




     java (数据类型划分)




  
